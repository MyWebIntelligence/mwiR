% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/recode.R
\name{mwir_seorank}
\alias{mwir_seorank}
\title{Fetch SEO Rank Data for URLs with Progress Reporting}
\usage{
mwir_seorank(filename = NULL, urls = NULL, api_key = NULL)
}
\arguments{
\item{filename}{A character string specifying the name of the output CSV file
(without extension). If NULL, the function will stop and prompt the user for input.}

\item{urls}{A character vector of URLs for which to fetch SEO rank data. If NULL,
the function will stop and prompt the user for input.}

\item{api_key}{A character string containing the API key for the SEO Rank API.
If NULL, the function will stop and prompt the user for input.}
}
\value{
This function does not return a value. It writes the fetched SEO rank data to a CSV file
and prints progress messages to the console.
}
\description{
This function retrieves SEO rank data for a list of URLs by querying the SEO Rank API.
It dynamically creates columns based on the API response and writes the data to a CSV file.
}
\details{
The function workflow includes:
1. Validating the input parameters to ensure they are provided.
2. Initializing an empty data frame to store the column names dynamically.
3. Iterating over each URL to fetch SEO rank data from the API.
4. Dynamically creating columns in the data frame based on the API response.
5. Writing each row of data to the specified CSV file.
6. Introducing a small delay between API calls to avoid overwhelming the server.

If an API call fails for a URL, the function prints a warning message and continues processing the remaining URLs.
}
\note{
This function requires an active internet connection and a valid API key from
https://seo-rank.my-addr.com/.
}
\examples{
\dontrun{
# Fetch SEO rank data for multiple URLs
mwir_seorank("my_seo_data", c("example.com", "example.org"), "YOUR_API_KEY")

# Fetch SEO rank data for a single URL
mwir_seorank("single_url_data", "example.net", "YOUR_API_KEY")
}
}
