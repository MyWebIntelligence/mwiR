% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/recode.R
\name{powerscaled}
\alias{powerscaled}
\title{Apply Power Law Scaling Transformations to Numeric Variables}
\usage{
powerscaled(df, variables = NULL)
}
\arguments{
\item{df}{A data frame containing the variables to transform.}

\item{variables}{Optional. A character vector of variable names to transform.
If NULL (default), all numeric variables in the data frame are transformed.}
}
\value{
A new data frame with the original variables and their transformed versions.
  For each transformed variable, four new columns are added:
  \itemize{
    \item \code{[varname]_scalecat}: Categorized log-scaled values
    \item \code{[varname]_log1P}: Log1p transformed values
    \item \code{[varname]_mclust}: Mclust classification
    \item \code{[varname]_IQ}: Quartile-based categorization
  }
}
\description{
This function applies various scaling transformations to numeric variables
in a data frame, including log-scaling, Mclust classification, and
quartile-based categorization.
}
\details{
The function performs the following transformations:
\itemize{
  \item Log-scaling and categorization into 5 levels
  \item Log1p transformation
  \item Mclust classification
  \item Quartile-based categorization with outlier detection
}
}
\examples{
# Create a sample data frame
df <- data.frame(
  var1 = rnorm(100, 50, 10),
  var2 = rexp(100, 1/50)
)

# Apply transformations to all numeric variables
new_df <- powerscaled(df)

# Apply transformations to specific variables
new_df <- powerscaled(df, c("var1"))

}
